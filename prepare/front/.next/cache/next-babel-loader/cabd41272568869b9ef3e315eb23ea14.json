{"ast":null,"code":"var _jsxFileName = \"/Users/joseungjin/Documents/dev/creatijin/nodebird/prepare/front/components/postCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport PropType from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { Card, Popover, Button, Avatar } from \"antd\";\nimport PostImages from \"../components/PostImages\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false); // const { me } = useSelector((state) => state.user);\n  // const id = me && me.id;\n  // 옵셔널 체이닝(optional chaining ) 연산자\n  // const id = me?.id;\n\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    cover: post.Images && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 33\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }), __jsx(HeartOutlined, {\n      ket: \"heart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 23\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 23\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }))));\n};\n\nPostCard.propTypes = {\n  post: PropType.shape({\n    id: PropType.number,\n    User: PropType.object,\n    content: PropType.string,\n    createdAt: PropType.object,\n    Comment: PropType.arrayOf(PropType.object),\n    images: PropType.arrayOf(PropType.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/joseungjin/Documents/dev/creatijin/nodebird/prepare/front/components/postCard.js"],"names":["React","useState","PropType","useSelector","Card","Popover","Button","Avatar","PostImages","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","id","state","user","me","marginBottom","Images","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comment","arrayOf","images","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropType from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { Card, Popover, Button, Avatar } from \"antd\";\nimport PostImages from \"../components/PostImages\";\nimport {\n  RetweetOutlined,\n  HeartOutlined,\n  MessageOutlined,\n  EllipsisOutlined,\n} from \"@ant-design/icons\";\n\nconst PostCard = ({ post }) => {\n  const [liked, setLiked] = useState(false);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n\n  // const { me } = useSelector((state) => state.user);\n  // const id = me && me.id;\n  // 옵셔널 체이닝(optional chaining ) 연산자\n  // const id = me?.id;\n  const id = useSelector((state) => state.user.me?.id);\n  return (\n    <>\n      <div style={{ marginBottom: 20 }}>\n        <Card\n          cover={post.Images && <PostImages images={post.Images} />}\n          actions={[\n            <RetweetOutlined key=\"retweet\" />,\n            <HeartOutlined ket=\"heart\" />,\n            <MessageOutlined key=\"comment\" />,\n            <Popover\n              key=\"more\"\n              content={\n                <Button.Group>\n                  {id && post.User.id === id ? (\n                    <>\n                      <Button>수정</Button>\n                      <Button type=\"danger\">삭제</Button>\n                    </>\n                  ) : (\n                    <Button>신고</Button>\n                  )}\n                </Button.Group>\n              }\n            >\n              <EllipsisOutlined />\n            </Popover>,\n          ]}\n        >\n          <Card.Meta\n            avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n            title={post.User.nickname}\n            description={post.content}\n          />\n        </Card>\n      </div>\n    </>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropType.shape({\n    id: PropType.number,\n    User: PropType.object,\n    content: PropType.string,\n    createdAt: PropType.object,\n    Comment: PropType.arrayOf(PropType.object),\n    images: PropType.arrayOf(PropType.object),\n  }).isRequired,\n};\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}