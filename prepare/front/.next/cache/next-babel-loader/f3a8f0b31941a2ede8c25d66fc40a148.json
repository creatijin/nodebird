{"ast":null,"code":"var _jsxFileName = \"/Users/joseungjin/Documents/dev/creatijin/nodebird/prepare/front/components/postCard.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Card } from \"antd\";\nimport PropType from \"prop-types\";\nimport { RetweetOutLined, HeartOutLined, MessageOutlined, EllipsisOutlined, Popover, ButtonGroup } from \"@ant-design\";\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const id = me && me.id; // 옵셔널 체이닝(optional chaining ) 연산자\n  // const id = me?.id;\n  // const id = useSelector((state) => state.user.me?.id);\n\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    cover: post.images[0] && __jsx(PostImages, {\n      images: post.imges,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 34\n      }\n    }),\n    action: [__jsx(RetweetOutLined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), __jsx(HeartOutLined, {\n      ket: \"heart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(ButtonGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), __jsx(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n};\n\nPostCard.propType = {\n  post: PropType.shape({\n    id: PropType.number,\n    User: PropType.object,\n    content: PropType.string,\n    createdAt: PropType.object,\n    Comment: PropType.arrayOf(PropType.object),\n    images: PropType.arrayOf(PropType.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/joseungjin/Documents/dev/creatijin/nodebird/prepare/front/components/postCard.js"],"names":["React","Card","PropType","RetweetOutLined","HeartOutLined","MessageOutlined","EllipsisOutlined","Popover","ButtonGroup","PostCard","post","me","useSelector","state","user","id","images","imges","User","nickname","content","propType","shape","number","object","string","createdAt","Comment","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card } from \"antd\";\nimport PropType from \"prop-types\";\nimport {\n  RetweetOutLined,\n  HeartOutLined,\n  MessageOutlined,\n  EllipsisOutlined,\n  Popover,\n  ButtonGroup,\n} from \"@ant-design\";\n\nconst PostCard = ({ post }) => {\n  const { me } = useSelector((state) => state.user);\n  const id = me && me.id;\n  // 옵셔널 체이닝(optional chaining ) 연산자\n  // const id = me?.id;\n  // const id = useSelector((state) => state.user.me?.id);\n  return (\n    <>\n      <Card\n        cover={post.images[0] && <PostImages images={post.imges} />}\n        action={[\n          <RetweetOutLined key=\"retweet\" />,\n          <HeartOutLined ket=\"heart\" />,\n          <MessageOutlined key=\"comment\" />,\n          <Popover\n            key=\"more\"\n            content={\n              <ButtonGroup>\n                {id && post.User.id === id ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button type=\"danger\">삭제</Button>\n                  </>\n                ) : (\n                  <Button>신고</Button>\n                )}\n              </ButtonGroup>\n            }\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={post.content}\n        />\n        <Content />\n      </Card>\n    </>\n  );\n};\n\nPostCard.propType = {\n  post: PropType.shape({\n    id: PropType.number,\n    User: PropType.object,\n    content: PropType.string,\n    createdAt: PropType.object,\n    Comment: PropType.arrayOf(PropType.object),\n    images: PropType.arrayOf(PropType.object),\n  }).isRequired,\n};\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}